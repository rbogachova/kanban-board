{"version":3,"sources":["NewTaskForm.js","TaskPriority.js","TaskDeleteIcon.js","TaskEditIcon.js","Task.js","TaskList.js","App.js","index.js"],"names":["NewTaskForm","props","useState","taskInput","setTaskInput","taskPriority","setTaskPriority","isAddTaskFormOpen","type","className","onClick","openAddTaskForm","onSubmit","addTask","htmlFor","id","value","onChange","e","target","parseInt","required","selected","disabled","trim","length","cancelAddTask","TaskPriority","priorityButtonClasses","task","priority","decreasePriority","increasePriority","TaskDeleteIcon","showDeleteModal","setShowDeleteModal","handleCloseModal","Modal","show","onHide","Header","closeButton","Title","Body","name","Footer","Button","variant","deleteTask","TaskEditIcon","showEditModal","setShowEditModal","editTaskInput","setEditTaskInput","editTask","Task","priorityBorderClasses","taskListStatus","moveTaskRight","moveTaskLeft","TaskList","taskQuantity","tasks","filter","el","status","taskListName","sort","a","b","map","key","uuidv4","initialTasks","App","setTasks","setIsAddTaskFormOpen","taskId","updatedTasks","taskName","push","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.905ab839.chunk.js","sourcesContent":["import React, {useState} from 'react';\n\nfunction NewTaskForm(props) {\n    const [taskInput, setTaskInput] = useState('');\n    const [taskPriority, setTaskPriority] = useState(3);\n\n    const openAddTaskForm = () => {\n        props.openAddTaskForm();\n    };\n\n    const cancelAddTask = () => {\n        props.cancelAddTask();\n        setTaskInput('');\n    };\n\n    const submitTask = () => {\n        props.addTask(taskInput, taskPriority);\n        setTaskInput('');\n        setTaskPriority(3);\n    };\n\n    return (\n        <div>\n            {!props.isAddTaskFormOpen &&\n            <button type=\"button\"\n                    className=\"btn btn-primary\"\n                    onClick={openAddTaskForm}>\n                Add Task\n            </button>\n            }\n\n            {props.isAddTaskFormOpen &&\n            <form onSubmit={submitTask}>\n                <div className=\"form-row\">\n                    <div className=\"col-md-6 mb-3\">\n                        <label htmlFor=\"taskName\">Task</label>\n                        <input type=\"text\"\n                               className=\"form-control\"\n                               id=\"taskName\"\n                               value={taskInput}\n                               onChange={e => setTaskInput(e.target.value)}/>\n                    </div>\n\n                    <div className=\"col-md-2 mb-3\">\n                        <label htmlFor=\"taskPriority\">Priority</label>\n                        <select className=\"form-control\"\n                                id=\"taskPriority\"\n                                onChange={e => setTaskPriority(parseInt(e.target.value))}\n                                required>\n                            <option selected disabled value=\"\">Choose...</option>\n                            <option value=\"3\">High</option>\n                            <option value=\"2\">Medium</option>\n                            <option value=\"1\">Low</option>\n                        </select>\n                    </div>\n                </div>\n\n                <button type=\"submit\"\n                        className=\"btn btn-primary mr-2\"\n                        disabled={taskInput.trim().length < 4}>\n                    Submit\n                </button>\n\n                <button type=\"button\"\n                        className=\"btn btn-secondary\"\n                        onClick={cancelAddTask}>\n                    Cancel\n                </button>\n            </form>\n            }\n        </div>\n    );\n}\n\nexport default NewTaskForm;","import React from 'react';\n\nfunction TaskPriority(props) {\n    const decreasePriority = () => {\n        props.decreasePriority(props.task.id, props.task.priority - 1);\n    };\n\n    const increasePriority = () => {\n        props.increasePriority(props.task.id, props.task.priority + 1);\n    };\n\n    let priorityButtonClasses = 'badge btn';\n\n    if (props.task.priority === 3) {\n        priorityButtonClasses += ' btn-danger';\n    } else if (props.task.priority === 2) {\n        priorityButtonClasses += ' btn-warning';\n    } else\n        priorityButtonClasses += ' btn-success';\n\n    const determinePriorityWord = () => {\n        if (props.task.priority === 3) {\n            return \"High Priority\";\n        } else if (props.task.priority === 2) {\n            return \"Med Priority\";\n        } else\n            return \"Low Priority\";\n    };\n\n    return (\n        <div>\n            {\n                props.task.priority > 1 &&\n                <button className=\"btn btn-sm\"\n                        onClick={decreasePriority}\n                        disabled={props.task.priority < 2}>\n                    <i className=\"fa fa-minus\"/>\n                </button>\n            }\n\n            <div className={priorityButtonClasses}>{determinePriorityWord()}</div>\n\n            {\n                props.task.priority < 3 &&\n                <button className=\"btn btn-sm\"\n                        onClick={increasePriority}\n                        disabled={props.task.priority > 2}>\n                    <i className=\"fa fa-plus\"/>\n                </button>\n            }\n        </div>\n    );\n}\n\nexport default TaskPriority;","import React, {useState} from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\n\nfunction TaskDeleteIcon(props) {\n    const [showDeleteModal, setShowDeleteModal] = useState(false);\n\n    const handleShowModal = () => {\n        setShowDeleteModal(true);\n    };\n\n    const handleCloseModal = () => {\n        setShowDeleteModal(false);\n    };\n\n    const deleteTask = () => {\n        props.deleteTask(props.task.id);\n        setShowDeleteModal(false);\n    };\n\n    return (\n        <div>\n            <button type=\"button\"\n                    className=\"btn btn-sm float-left\"\n                    onClick={handleShowModal}>\n                <i className=\"fa fa-trash-o\"/>\n            </button>\n\n            <Modal show={showDeleteModal} onHide={handleCloseModal}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Are you sure you want to delete the task?</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>{props.task.name}</Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"primary\" onClick={deleteTask}>\n                        OK\n                    </Button>\n                    <Button variant=\"secondary\" onClick={handleCloseModal}>\n                        Cancel\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </div>\n    );\n}\n\nexport default TaskDeleteIcon;","import React, {useState} from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Modal from 'react-bootstrap/Modal';\n\nfunction TaskEditIcon(props) {\n    const [showEditModal, setShowEditModal] = useState(false);\n    const [editTaskInput, setEditTaskInput] = useState(props.task.name);\n\n    const handleShowModal = () => {\n        setShowEditModal(true);\n        setEditTaskInput(props.task.name);\n    };\n\n    const handleCloseModal = () => {\n        setEditTaskInput(props.task.name);\n        setShowEditModal(false);\n    };\n\n    const editTask = () => {\n        props.editTask(props.task.id, editTaskInput);\n        setShowEditModal(false);\n    };\n\n    return (\n        <div>\n            <button type=\"button\"\n                    className=\"btn btn-sm float-left\"\n                    onClick={handleShowModal}>\n                <i className=\"fa fa-pencil\"/>\n            </button>\n\n            <Modal show={showEditModal} onHide={handleCloseModal}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Edit Task</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <input type=\"text\"\n                           className=\"form-control\"\n                           id=\"taskName\"\n                           value={editTaskInput}\n                           onChange={e => setEditTaskInput(e.target.value)}/>\n\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"primary\" onClick={editTask}>\n                        OK\n                    </Button>\n                    <Button variant=\"secondary\" onClick={handleCloseModal}>\n                        Cancel\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </div>\n    );\n}\n\nexport default TaskEditIcon;","import React from 'react';\nimport TaskPriority from \"./TaskPriority\";\nimport './Task.css';\nimport TaskDeleteIcon from \"./TaskDeleteIcon\";\nimport TaskEditIcon from \"./TaskEditIcon\";\n\nfunction Task(props) {\n    const moveTaskRight = () => {\n        props.moveTaskRight(props.task.id);\n    };\n\n    const moveTaskLeft = () => {\n        props.moveTaskLeft(props.task.id);\n    };\n\n    let priorityBorderClasses = 'border-left';\n\n    if (props.task.priority === 3) {\n        priorityBorderClasses += ' border-danger';\n    } else if (props.task.priority === 2) {\n        priorityBorderClasses += ' border-warning';\n    } else\n        priorityBorderClasses += ' border-success';\n\n    return (\n        <div className=\"card shadow bg-white rounded mb-2\">\n            <div className={priorityBorderClasses}>\n                <div className=\"card-body\">\n                    <TaskPriority task={props.task}\n                                  increasePriority={props.increasePriority}\n                                  decreasePriority={props.decreasePriority}/>\n\n                    <div className=\"card-header\">{props.task.name}</div>\n\n                    <TaskDeleteIcon deleteTask={props.deleteTask}\n                                    task={props.task}/>\n\n                    <TaskEditIcon editTask={props.editTask}\n                                  task={props.task}/>\n\n                    {\n                        props.taskListStatus !== 'closed' &&\n                        <button type=\"button\"\n                                className=\"btn btn-sm float-right\"\n                                onClick={moveTaskRight}>\n                            <i className=\"fa fa-arrow-right\"/>\n                        </button>\n                    }\n\n                    {\n                        props.taskListStatus !== 'todo' &&\n                        <button type=\"button\"\n                                className=\"btn btn-sm float-right\"\n                                onClick={moveTaskLeft}>\n                            <i className=\"fa fa-arrow-left\"/>\n                        </button>\n                    }\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Task;","import React from 'react';\nimport Task from \"./Task\";\n\nfunction TaskList(props) {\n\n    const taskQuantity = props.tasks\n        .filter(el => el.status === props.taskListStatus)\n        .length;\n\n    return (\n        <div className=\"col-sm\">\n            {\n                props.taskListStatus !== \"closed\"\n                    ? <h6>{props.taskListName + \" \" + taskQuantity}</h6>\n                    : <h6>{`${props.taskListName} ${taskQuantity} OF ${props.tasks.length}`}</h6>\n            }\n\n            {\n                props.tasks.filter(el => el.status === props.taskListStatus)\n                    .sort((a, b) => b.priority - a.priority)\n                    .map(el =>\n                        <Task key={el.id}\n                              task={el}\n                              taskListStatus={props.taskListStatus}\n                              increasePriority={props.increasePriority}\n                              decreasePriority={props.decreasePriority}\n                              deleteTask={props.deleteTask}\n                              editTask={props.editTask}\n                              moveTaskLeft={props.moveTaskLeft}\n                              moveTaskRight={props.moveTaskRight}/>\n                    )\n            }\n        </div>\n    );\n}\n\nexport default TaskList;","import React, {useState} from 'react';\nimport NewTaskForm from \"./NewTaskForm\";\nimport TaskList from \"./TaskList\";\nimport {v4 as uuidv4} from 'uuid';\n\nuuidv4();\n\nconst initialTasks = [\n    {id: uuidv4(), name: 'Task 1', status: 'todo', priority: 2},\n    {id: uuidv4(), name: 'Task 2', status: 'resolved', priority: 2},\n    {id: uuidv4(), name: 'Task 3', status: 'in progress', priority: 3},\n    {id: uuidv4(), name: 'Task 4', status: 'closed', priority: 1},\n    {id: uuidv4(), name: 'Task 5', status: 'todo', priority: 3}\n];\n\nfunction App() {\n    const [tasks, setTasks] = useState(initialTasks);\n    const [isAddTaskFormOpen, setIsAddTaskFormOpen] = useState(false);\n\n    const openAddTaskForm = () => {\n        setIsAddTaskFormOpen(true);\n    };\n\n    const cancelAddTask = () => {\n        setIsAddTaskFormOpen(false);\n    };\n\n    const addTask = (taskName, taskPriority) => {\n        setIsAddTaskFormOpen(false);\n        const updatedTasks = [...tasks];\n        updatedTasks.push({id: uuidv4(), name: taskName, status: 'todo', priority: taskPriority});\n        setTasks(updatedTasks);\n    };\n\n    const deleteTask = (taskId) => {\n        const updatedTasks = tasks.filter(el => el.id !== taskId);\n        setTasks(updatedTasks);\n    };\n\n    const editTask = (taskId, taskName) => {\n        const updatedTasks = tasks.map(el => {\n            if (el.id === taskId) {\n                return {\n                    ...el,\n                    name: taskName\n                }\n            } else\n                return el;\n        });\n        setTasks(updatedTasks);\n    };\n\n    const moveTaskRight = (taskId) => {\n        const updatedTasks = tasks.map(el => {\n            if (el.id === taskId) {\n                if (el.status === 'todo') {\n                    return {\n                        ...el,\n                        status: 'in progress'\n                    }\n                } else if (el.status === 'in progress') {\n                    return {\n                        ...el,\n                        status: 'resolved'\n                    }\n                } else\n                    return {\n                        ...el,\n                        status: 'closed'\n                    }\n            } else\n                return el;\n        });\n        setTasks(updatedTasks);\n    };\n\n    const moveTaskLeft = (taskId) => {\n        const updatedTasks = tasks.map(el => {\n            if (el.id === taskId) {\n                if (el.status === 'in progress') {\n                    return {\n                        ...el,\n                        status: 'todo'\n                    }\n                } else if (el.status === 'resolved') {\n                    return {\n                        ...el,\n                        status: 'in progress'\n                    }\n                } else\n                    return {\n                        ...el,\n                        status: 'resolved'\n                    }\n            } else\n                return el;\n        });\n        setTasks(updatedTasks);\n    };\n\n    const increasePriority = (taskId, taskPriority) => {\n        const updatedTasks = tasks.map(el => {\n            if (el.id === taskId) {\n                return {\n                    ...el,\n                    priority: taskPriority\n                }\n            } else\n                return el;\n        });\n        setTasks(updatedTasks);\n    };\n\n    const decreasePriority = (taskId, taskPriority) => {\n        const updatedTasks = tasks.map(el => {\n            if (el.id === taskId) {\n                return {\n                    ...el,\n                    priority: taskPriority\n                }\n            } else\n                return el;\n        });\n        setTasks(updatedTasks);\n    };\n\n    return (\n        <div>\n            <div className=\"container\">\n                <h2>Kanban Board</h2>\n                <NewTaskForm isAddTaskFormOpen={isAddTaskFormOpen}\n                             openAddTaskForm={openAddTaskForm}\n                             cancelAddTask={cancelAddTask}\n                             addTask={addTask}/>\n                <hr/>\n                <div className=\"row\">\n                    <TaskList taskListName=\"TO DO\"\n                              taskListStatus=\"todo\"\n                              tasks={tasks}\n                              increasePriority={increasePriority}\n                              decreasePriority={decreasePriority}\n                              deleteTask={deleteTask}\n                              editTask={editTask}\n                              moveTaskRight={moveTaskRight}/>\n                    <TaskList taskListName=\"IN PROGRESS\"\n                              taskListStatus=\"in progress\"\n                              tasks={tasks}\n                              increasePriority={increasePriority}\n                              decreasePriority={decreasePriority}\n                              deleteTask={deleteTask}\n                              editTask={editTask}\n                              moveTaskLeft={moveTaskLeft}\n                              moveTaskRight={moveTaskRight}/>\n                    <TaskList taskListName=\"RESOLVED\"\n                              taskListStatus=\"resolved\"\n                              tasks={tasks}\n                              increasePriority={increasePriority}\n                              decreasePriority={decreasePriority}\n                              deleteTask={deleteTask}\n                              editTask={editTask}\n                              moveTaskLeft={moveTaskLeft}\n                              moveTaskRight={moveTaskRight}/>\n                    <TaskList taskListName=\"CLOSED\"\n                              taskListStatus=\"closed\"\n                              tasks={tasks}\n                              increasePriority={increasePriority}\n                              decreasePriority={decreasePriority}\n                              deleteTask={deleteTask}\n                              editTask={editTask}\n                              moveTaskLeft={moveTaskLeft}/>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport App from './App';\n\nReactDOM.render(\n    <App/>, document.getElementById('root')\n);"],"sourceRoot":""}