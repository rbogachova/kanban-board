{"version":3,"sources":["NewTaskForm.js","TaskPriority.js","Task.js","TaskList.js","App.js","index.js"],"names":["NewTaskForm","props","useState","taskInput","setTaskInput","isAddTaskFormOpen","type","className","onClick","openAddTaskForm","value","onChange","e","target","disabled","trim","length","addTask","cancelAddTask","TaskPriority","minusPriority","task","id","priority","plusPriority","Task","name","deleteTask","status","moveTaskRight","moveTaskLeft","TaskList","taskListName","tasks","filter","el","taskListStatus","sort","a","b","map","initialTasks","App","setTasks","setIsAddTaskFormOpen","taskId","updatedTasks","taskName","push","Math","random","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d976220b.chunk.js","sourcesContent":["import React, {useState} from 'react';\n\nfunction NewTaskForm(props) {\n    const [taskInput, setTaskInput] = useState('');\n\n    const openAddTaskForm = () => {\n        props.openAddTaskForm();\n    };\n\n    const cancelAddTask = () => {\n        props.cancelAddTask();\n        setTaskInput('');\n    };\n\n    const submitTask = () => {\n        props.addTask(taskInput);\n        setTaskInput('');\n    };\n\n    return (\n        <div>\n            {!props.isAddTaskFormOpen &&\n            <button type=\"button\"\n                    className=\"btn btn-primary\"\n                    onClick={openAddTaskForm}>\n                Add task\n            </button>\n            }\n\n            {props.isAddTaskFormOpen &&\n            <form>\n                <input className=\"form-control form-control-sm\"\n                       type=\"text\"\n                       value={taskInput}\n                       onChange={e => setTaskInput(e.target.value)}/>\n\n                <button type=\"submit\"\n                        className=\"btn btn-primary\"\n                        disabled={taskInput.trim().length < 4}\n                        onClick={submitTask}>\n                    Submit\n                </button>\n\n                <button type=\"button\"\n                        className=\"btn btn-secondary\"\n                        onClick={cancelAddTask}>\n                    Cancel\n                </button>\n            </form>\n            }\n        </div>\n    );\n}\n\nexport default NewTaskForm;","import React from 'react';\n\nfunction TaskPriority(props) {\n    const minusPriority = () => {\n        props.minusPriority(props.task.id, props.task.priority - 1);\n    };\n\n    const plusPriority = () => {\n        props.plusPriority(props.task.id, props.task.priority + 1);\n    };\n\n    return (\n        <div>\n            <button onClick={minusPriority}\n                    disabled={props.task.priority < 2}>\n                -\n            </button>\n\n            <button>Priority: {props.task.priority}</button>\n\n            <button onClick={plusPriority}\n                    disabled={props.task.priority > 2}>\n                +\n            </button>\n        </div>\n    );\n}\n\nexport default TaskPriority;","import React from 'react';\nimport TaskPriority from \"./TaskPriority\";\n\nfunction Task(props) {\n    const deleteTask = () => {\n        props.deleteTask(props.task.id);\n    };\n\n    const moveTaskRight = () => {\n        props.moveTaskRight(props.task.id);\n    };\n\n    const moveTaskLeft = () => {\n        props.moveTaskLeft(props.task.id);\n    };\n\n    return (\n        <div className=\"card shadow bg-white rounded\">\n            <div className=\"card-body\">\n                <TaskPriority task={props.task}\n                              plusPriority={props.plusPriority}\n                              minusPriority={props.minusPriority}/>\n\n                <p className=\"card-text\">{props.task.name}</p>\n\n                <button type=\"button\"\n                        className=\"btn btn-outline-success btn-sm float-left\"\n                        onClick={deleteTask}>\n                    <i className=\"fa fa-trash-o\"/>\n                </button>\n\n                {\n                    props.status !== 'closed' &&\n                    <button type=\"button\"\n                            className=\"btn btn-outline-success btn-sm float-right\"\n                            onClick={moveTaskRight}>\n                        <i className=\"fa fa-arrow-right\"/>\n                    </button>\n                }\n\n                {\n                    props.status !== 'todo' &&\n                    <button type=\"button\"\n                            className=\"btn btn-outline-success btn-sm float-right\"\n                            onClick={moveTaskLeft}>\n                        <i className=\"fa fa-arrow-left\"/>\n                    </button>\n                }\n            </div>\n        </div>\n    );\n}\n\nexport default Task;","import React from 'react';\nimport Task from \"./Task\";\n\nfunction TaskList(props) {\n\n    return (\n        <div className=\"col-sm\">\n            <div className=\"card shadow bg-white rounded\">\n                <div className=\"card-body\">\n                    {props.taskListName}\n                </div>\n            </div>\n\n            {props.tasks.filter(el => el.status === props.taskListStatus)\n                .sort((a, b) => a.priority - b.priority)\n                .map(el =>\n                    <Task task={el}\n                          plusPriority={props.plusPriority}\n                          minusPriority={props.minusPriority}\n                          deleteTask={props.deleteTask}\n                          moveTaskLeft={props.moveTaskLeft}\n                          moveTaskRight={props.moveTaskRight}/>\n                )}\n        </div>\n    );\n}\n\nexport default TaskList;","import React, {useState} from 'react';\nimport './App.css';\nimport NewTaskForm from \"./NewTaskForm\";\nimport TaskList from \"./TaskList\";\n\nconst initialTasks = [\n    {id: 1, name: 'Do Components', status: 'todo', priority: 3},\n    {id: 2, name: 'Watch Last Lesson Video', status: 'resolved', priority: 2},\n    {id: 3, name: 'Learn React', status: 'in progress', priority: 1},\n    {id: 4, name: 'Write Todo App from Scratch', status: 'closed', priority: 2},\n    {id: 5, name: 'Make Kanban Board', status: 'todo', priority: 1}\n];\n\nfunction App() {\n    const [tasks, setTasks] = useState(initialTasks);\n    const [isAddTaskFormOpen, setIsAddTaskFormOpen] = useState(false);\n\n    const openAddTaskForm = () => {\n        setIsAddTaskFormOpen(true);\n    };\n\n    const cancelAddTask = () => {\n        setIsAddTaskFormOpen(false);\n    };\n\n    const addTask = (taskName) => {\n        setIsAddTaskFormOpen(false);\n        const updatedTasks = [...tasks];\n        updatedTasks.push({id: Math.random(), name: taskName, status: 'todo', priority: null});\n        setTasks(updatedTasks);\n    };\n\n    const deleteTask = (taskId) => {\n        const updatedTasks = tasks.filter(el => el.id !== taskId);\n        setTasks(updatedTasks);\n    };\n\n    const moveTaskRight = (taskId) => {\n        const updatedTasks = tasks.map(el => {\n            if (el.id === taskId) {\n                if (el.status === 'todo') {\n                    return {\n                        ...el,\n                        status: 'in progress'\n                    }\n                } else if (el.status === 'in progress') {\n                    return {\n                        ...el,\n                        status: 'resolved'\n                    }\n                } else\n                    return {\n                        ...el,\n                        status: 'closed'\n                    }\n            } else\n                return el;\n        });\n        setTasks(updatedTasks);\n    };\n\n    const moveTaskLeft = (taskId) => {\n        const updatedTasks = tasks.map(el => {\n            if (el.id === taskId) {\n                if (el.status === 'in progress') {\n                    return {\n                        ...el,\n                        status: 'todo'\n                    }\n                } else if (el.status === 'resolved') {\n                    return {\n                        ...el,\n                        status: 'in progress'\n                    }\n                } else\n                    return {\n                        ...el,\n                        status: 'resolved'\n                    }\n            } else\n                return el;\n        });\n        setTasks(updatedTasks);\n    };\n\n    const plusPriority = (taskId, value) => {\n        const updatedTasks = tasks.map(el => {\n            if (el.id === taskId) {\n                return {\n                    ...el,\n                    priority: value\n                }\n            } else\n                return el;\n        });\n        setTasks(updatedTasks);\n    };\n\n    const minusPriority = (taskId, value) => {\n        const updatedTasks = tasks.map(el => {\n            if (el.id === taskId) {\n                return {\n                    ...el,\n                    priority: value\n                }\n            } else\n                return el;\n        });\n        setTasks(updatedTasks);\n    };\n\n    return (\n        <div>\n            <div className=\"container\">\n                <h1>Kanban</h1>\n                <NewTaskForm isAddTaskFormOpen={isAddTaskFormOpen}\n                             openAddTaskForm={openAddTaskForm}\n                             cancelAddTask={cancelAddTask}\n                             addTask={addTask}/>\n                <hr/>\n                <div className=\"row\">\n                    <TaskList taskListName=\"To Do\"\n                              taskListStatus=\"todo\"\n                              tasks={tasks}\n                              plusPriority={plusPriority}\n                              minusPriority={minusPriority}\n                              deleteTask={deleteTask}\n                              moveTaskRight={moveTaskRight}/>\n                    <TaskList taskListName=\"In Progress\"\n                              taskListStatus=\"in progress\"\n                              tasks={tasks}\n                              plusPriority={plusPriority}\n                              minusPriority={minusPriority}\n                              deleteTask={deleteTask}\n                              moveTaskLeft={moveTaskLeft}\n                              moveTaskRight={moveTaskRight}/>\n                    <TaskList taskListName=\"Resolved\"\n                              taskListStatus=\"resolved\"\n                              tasks={tasks}\n                              plusPriority={plusPriority}\n                              minusPriority={minusPriority}\n                              deleteTask={deleteTask}\n                              moveTaskLeft={moveTaskLeft}\n                              moveTaskRight={moveTaskRight}/>\n                    <TaskList taskListName=\"Closed\"\n                              taskListStatus=\"closed\"\n                              tasks={tasks}\n                              plusPriority={plusPriority}\n                              minusPriority={minusPriority}\n                              deleteTask={deleteTask}\n                              moveTaskLeft={moveTaskLeft}/>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport App from './App';\n\nReactDOM.render(\n    <App/>, document.getElementById('root')\n);"],"sourceRoot":""}