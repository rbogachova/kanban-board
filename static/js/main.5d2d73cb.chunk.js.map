{"version":3,"sources":["NewTaskForm.js","Task.js","TaskList.js","App.js","index.js"],"names":["NewTaskForm","props","useState","taskInput","setTaskInput","isAddTaskFormOpen","type","className","onClick","openAddTaskForm","value","onChange","e","target","disabled","trim","length","submitTask","cancelAddTask","Task","taskName","deleteTask","id","status","moveTaskRight","moveTaskLeft","TaskList","name","tasks","filter","el","map","initialTasks","App","setTasks","setIsAddTaskFormOpen","taskId","updatedTasks","push","Math","random","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5d2d73cb.chunk.js","sourcesContent":["import React, {useState} from 'react';\n\nfunction NewTaskForm(props) {\n    const [taskInput, setTaskInput] = useState('');\n\n    const openAddTaskForm = () => {\n        props.openAddTaskForm();\n    };\n\n    const cancelAddTask = () => {\n        props.cancelAddTask();\n        setTaskInput('');\n    };\n\n    const submitTask = () => {\n        props.submitTask(taskInput);\n        setTaskInput('');\n    };\n\n    return (\n        <div>\n            {!props.isAddTaskFormOpen &&\n            <button type=\"button\"\n                    className=\"btn btn-primary\"\n                    onClick={openAddTaskForm}>\n                Add task\n            </button>\n            }\n\n            {props.isAddTaskFormOpen &&\n            <form>\n                <input className=\"form-control form-control-sm\"\n                       type=\"text\"\n                       value={taskInput}\n                       onChange={e => setTaskInput(e.target.value)}/>\n                <button type=\"submit\"\n                        className=\"btn btn-primary\"\n                        disabled={taskInput.trim().length < 4}\n                        onClick={submitTask}>\n                    Submit\n                </button>\n                <button type=\"button\"\n                        className=\"btn btn-secondary\"\n                        onClick={cancelAddTask}>\n                    Cancel\n                </button>\n            </form>\n            }\n        </div>\n    );\n}\n\nexport default NewTaskForm;","import React from 'react';\n\nfunction Task(props) {\n\n    const deleteTask = () => {\n        props.deleteTask(props.id);\n    };\n\n    const moveTaskRight = () => {\n        props.moveTaskRight(props.id);\n    };\n\n    const moveTaskLeft = () => {\n        props.moveTaskLeft(props.id);\n    };\n\n\n    return (\n        <div className=\"card shadow bg-white rounded\">\n            <div className=\"card-body\">\n                <p className=\"card-text\">{props.taskName}</p>\n                <button type=\"button\"\n                        className=\"btn btn-outline-success btn-sm float-left\"\n                        onClick={deleteTask}>\n                    <i className=\"fa fa-trash-o\"/>\n                </button>\n                {\n                    props.status !== 'closed' &&\n                    <button type=\"button\"\n                            className=\"btn btn-outline-success btn-sm float-right\"\n                            onClick={moveTaskRight}>\n                        <i className=\"fa fa-arrow-right\"/>\n                    </button>\n                }\n                {\n                    props.status !== 'todo' &&\n                    <button type=\"button\"\n                            className=\"btn btn-outline-success btn-sm float-right\"\n                            onClick={moveTaskLeft}>\n                        <i className=\"fa fa-arrow-left\"/>\n                    </button>\n                }\n\n            </div>\n        </div>\n    );\n}\n\nexport default Task;","import React from 'react';\nimport Task from \"./Task\";\n\nfunction TaskList(props) {\n\n    return (\n        <div className=\"col-sm\">\n            <div className=\"card shadow bg-white rounded\">\n                <div className=\"card-body\">\n                    {props.name}\n                </div>\n            </div>\n            {props.tasks.filter(el => el.status === props.status).map(el =>\n                <Task taskName={el.name}\n                      id={el.id}\n                      status={el.status}\n                      deleteTask={props.deleteTask}\n                      moveTaskLeft={props.moveTaskLeft}\n                      moveTaskRight={props.moveTaskRight}/>\n            )}\n        </div>\n    );\n}\n\nexport default TaskList;","import React, {useState} from 'react';\nimport './App.css';\nimport NewTaskForm from \"./NewTaskForm\";\nimport TaskList from \"./TaskList\";\n\nconst initialTasks = [\n    {id: 1, name: 'Do Components', status: 'todo'},\n    {id: 2, name: 'Watch Last Lesson Video', status: 'resolved'},\n    {id: 3, name: 'Learn React', status: 'in progress'},\n    {id: 4, name: 'Write Todo App from Scratch', status: 'closed'},\n    {id: 5, name: 'Make Kanban Board', status: 'todo'}\n];\n\nfunction App() {\n    const [tasks, setTasks] = useState(initialTasks);\n    const [isAddTaskFormOpen, setIsAddTaskFormOpen] = useState(false);\n\n    const openAddTaskForm = () => {\n        setIsAddTaskFormOpen(true);\n    };\n\n    const cancelAddTask = () => {\n        setIsAddTaskFormOpen(false);\n    };\n\n    const submitTask = (taskName) => {\n        setIsAddTaskFormOpen(false);\n        const updatedTasks = [...tasks];\n        updatedTasks.push({id: Math.random(), name: taskName, status: 'todo'});\n        setTasks(updatedTasks);\n    };\n\n    const deleteTask = (taskId) => {\n        const updatedTasks = tasks.filter(el => el.id !== taskId);\n        setTasks(updatedTasks);\n    };\n\n    const moveTaskRight = (taskId) => {\n        const updatedTasks = tasks.map(el => {\n            if (el.id === taskId) {\n                if (el.status === 'todo') {\n                    return {\n                        ...el,\n                        status: 'in progress'\n                    }\n                } else if (el.status === 'in progress') {\n                    return {\n                        ...el,\n                        status: 'resolved'\n                    }\n                } else\n                    return {\n                        ...el,\n                        status: 'closed'\n                    }\n            } else\n                return el;\n        });\n        setTasks(updatedTasks);\n    };\n\n    const moveTaskLeft = (taskId) => {\n        const updatedTasks = tasks.map(el => {\n            if (el.id === taskId) {\n                if (el.status === 'in progress') {\n                    return {\n                        ...el,\n                        status: 'todo'\n                    }\n                } else if (el.status === 'resolved') {\n                    return {\n                        ...el,\n                        status: 'in progress'\n                    }\n                } else\n                    return {\n                        ...el,\n                        status: 'resolved'\n                    }\n            } else\n                return el;\n        });\n        setTasks(updatedTasks);\n    };\n\n    return (\n        <div>\n            <div className=\"container\">\n                <h1>Kanban</h1>\n                <NewTaskForm isAddTaskFormOpen={isAddTaskFormOpen}\n                             openAddTaskForm={openAddTaskForm}\n                             cancelAddTask={cancelAddTask}\n                             submitTask={submitTask}/>\n                <hr/>\n                <div className=\"row\">\n                    <TaskList name=\"To Do\"\n                              status=\"todo\"\n                              tasks={tasks}\n                              deleteTask={deleteTask}\n                              moveTaskRight={moveTaskRight}/>\n                    <TaskList name=\"In Progress\"\n                              status=\"in progress\"\n                              tasks={tasks}\n                              deleteTask={deleteTask}\n                              moveTaskLeft={moveTaskLeft}\n                              moveTaskRight={moveTaskRight}/>\n                    <TaskList name=\"Resolved\"\n                              status=\"resolved\"\n                              tasks={tasks}\n                              deleteTask={deleteTask}\n                              moveTaskLeft={moveTaskLeft}\n                              moveTaskRight={moveTaskRight}/>\n                    <TaskList name=\"Closed\"\n                              status=\"closed\"\n                              tasks={tasks}\n                              deleteTask={deleteTask}\n                              moveTaskLeft={moveTaskLeft}/>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport App from './App';\n\nReactDOM.render(\n    <App/>, document.getElementById('root')\n);"],"sourceRoot":""}