{"version":3,"sources":["NewTaskForm.js","TaskPriority.js","Task.js","TaskList.js","App.js","index.js"],"names":["NewTaskForm","props","useState","taskInput","setTaskInput","isAddTaskFormOpen","type","className","onClick","openAddTaskForm","value","onChange","e","target","disabled","trim","length","addTask","cancelAddTask","TaskPriority","priorityButtonClasses","task","priority","decreasePriority","id","increasePriority","Task","name","deleteTask","taskListStatus","moveTaskRight","moveTaskLeft","TaskList","taskListName","tasks","filter","el","status","sort","a","b","map","initialTasks","App","setTasks","setIsAddTaskFormOpen","taskId","updatedTasks","taskName","push","Math","random","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e0d07260.chunk.js","sourcesContent":["import React, {useState} from 'react';\n\nfunction NewTaskForm(props) {\n    const [taskInput, setTaskInput] = useState('');\n\n    const openAddTaskForm = () => {\n        props.openAddTaskForm();\n    };\n\n    const cancelAddTask = () => {\n        props.cancelAddTask();\n        setTaskInput('');\n    };\n\n    const submitTask = () => {\n        props.addTask(taskInput);\n        setTaskInput('');\n    };\n\n    return (\n        <div>\n            {!props.isAddTaskFormOpen &&\n            <button type=\"button\"\n                    className=\"btn btn-warning\"\n                    onClick={openAddTaskForm}>\n                Add task\n            </button>\n            }\n\n            {props.isAddTaskFormOpen &&\n            <form>\n                <input className=\"form-control form-control-sm\"\n                       type=\"text\"\n                       value={taskInput}\n                       onChange={e => setTaskInput(e.target.value)}/>\n\n                <button type=\"submit\"\n                        className=\"btn btn-primary\"\n                        disabled={taskInput.trim().length < 4}\n                        onClick={submitTask}>\n                    Submit\n                </button>\n\n                <button type=\"button\"\n                        className=\"btn btn-secondary\"\n                        onClick={cancelAddTask}>\n                    Cancel\n                </button>\n            </form>\n            }\n        </div>\n    );\n}\n\nexport default NewTaskForm;","import React from 'react';\n\nfunction TaskPriority(props) {\n    const decreasePriority = () => {\n        props.decreasePriority(props.task.id, props.task.priority - 1);\n    };\n\n    const increasePriority = () => {\n        props.increasePriority(props.task.id, props.task.priority + 1);\n    };\n\n    const determinePriority = () => {\n        if (props.task.priority === 3) {\n            return \"High Priority\";\n        } else if (props.task.priority === 2) {\n            return \"Med Priority\";\n        } else\n            return \"Low Priority\";\n    };\n\n    let priorityButtonClasses = 'badge btn';\n\n    if (props.task.priority === 3) {\n        priorityButtonClasses += ' btn-danger';\n    } else if (props.task.priority === 2) {\n        priorityButtonClasses += ' btn-warning';\n    } else\n        priorityButtonClasses += ' btn-success';\n\n    return (\n        <span>\n            <span className={priorityButtonClasses}>{determinePriority()}</span>\n\n            {\n                props.task.priority > 1 &&\n                <button className=\"btn btn-sm\"\n                        onClick={decreasePriority}\n                        disabled={props.task.priority < 2}>\n                    <i className=\"fa fa-minus-circle\"/>\n                </button>\n            }\n\n            {\n                props.task.priority < 3 &&\n                <button className=\"btn btn-sm\"\n                        onClick={increasePriority}\n                        disabled={props.task.priority > 2}>\n                    <i className=\"fa fa-plus-circle\"/>\n                </button>\n            }\n        </span>\n    );\n}\n\nexport default TaskPriority;","import React from 'react';\nimport TaskPriority from \"./TaskPriority\";\n\nfunction Task(props) {\n    const deleteTask = () => {\n        props.deleteTask(props.task.id);\n    };\n\n    const moveTaskRight = () => {\n        props.moveTaskRight(props.task.id);\n    };\n\n    const moveTaskLeft = () => {\n        props.moveTaskLeft(props.task.id);\n    };\n\n    return (\n        <div className=\"card shadow bg-white rounded\">\n            <div className=\"card-body\">\n                <TaskPriority task={props.task}\n                              increasePriority={props.increasePriority}\n                              decreasePriority={props.decreasePriority}/>\n\n                <p className=\"card-header\">{props.task.name}</p>\n\n                <button type=\"button\"\n                        className=\"btn btn-sm float-left\"\n                        onClick={deleteTask}>\n                    <i className=\"fa fa-trash-o\"></i>\n                </button>\n\n                {\n                    props.taskListStatus !== 'closed' &&\n                    <button type=\"button\"\n                            className=\"btn btn-sm float-right\"\n                            onClick={moveTaskRight}>\n                        <i className=\"fa fa-arrow-right\"/>\n                    </button>\n                }\n\n                {\n                    props.taskListStatus !== 'todo' &&\n                    <button type=\"button\"\n                            className=\"btn btn-sm float-right\"\n                            onClick={moveTaskLeft}>\n                        <i className=\"fa fa-arrow-left\"/>\n                    </button>\n                }\n            </div>\n        </div>\n    );\n}\n\nexport default Task;","import React from 'react';\nimport Task from \"./Task\";\n\nfunction TaskList(props) {\n\n    return (\n        <div className=\"col-sm\">\n            <div className=\"card shadow bg-white rounded\">\n                <div className=\"card-body\">\n                    <h5>{props.taskListName}</h5>\n                </div>\n            </div>\n\n            {props.tasks.filter(el => el.status === props.taskListStatus)\n                .sort((a, b) => b.priority - a.priority)\n                .map(el =>\n                    <Task task={el}\n                          taskListStatus={props.taskListStatus}\n                          increasePriority={props.increasePriority}\n                          decreasePriority={props.decreasePriority}\n                          deleteTask={props.deleteTask}\n                          moveTaskLeft={props.moveTaskLeft}\n                          moveTaskRight={props.moveTaskRight}/>\n                )}\n        </div>\n    );\n}\n\nexport default TaskList;","import React, {useState} from 'react';\nimport './App.css';\nimport NewTaskForm from \"./NewTaskForm\";\nimport TaskList from \"./TaskList\";\n\nconst initialTasks = [\n    {id: 1, name: 'Do Components', status: 'todo', priority: 3},\n    {id: 2, name: 'Watch Last Lesson Video', status: 'resolved', priority: 2},\n    {id: 3, name: 'Learn React', status: 'in progress', priority: 1},\n    {id: 4, name: 'Write Todo App from Scratch', status: 'closed', priority: 2},\n    {id: 5, name: 'Make Kanban Board', status: 'todo', priority: 1}\n];\n\nfunction App() {\n    const [tasks, setTasks] = useState(initialTasks);\n    const [isAddTaskFormOpen, setIsAddTaskFormOpen] = useState(false);\n\n    const openAddTaskForm = () => {\n        setIsAddTaskFormOpen(true);\n    };\n\n    const cancelAddTask = () => {\n        setIsAddTaskFormOpen(false);\n    };\n\n    const addTask = (taskName) => {\n        setIsAddTaskFormOpen(false);\n        const updatedTasks = [...tasks];\n        updatedTasks.push({id: Math.random(), name: taskName, status: 'todo', priority: 3});\n        setTasks(updatedTasks);\n    };\n\n    const deleteTask = (taskId) => {\n        const updatedTasks = tasks.filter(el => el.id !== taskId);\n        setTasks(updatedTasks);\n    };\n\n    const moveTaskRight = (taskId) => {\n        const updatedTasks = tasks.map(el => {\n            if (el.id === taskId) {\n                if (el.status === 'todo') {\n                    return {\n                        ...el,\n                        status: 'in progress'\n                    }\n                } else if (el.status === 'in progress') {\n                    return {\n                        ...el,\n                        status: 'resolved'\n                    }\n                } else\n                    return {\n                        ...el,\n                        status: 'closed'\n                    }\n            } else\n                return el;\n        });\n        setTasks(updatedTasks);\n    };\n\n    const moveTaskLeft = (taskId) => {\n        const updatedTasks = tasks.map(el => {\n            if (el.id === taskId) {\n                if (el.status === 'in progress') {\n                    return {\n                        ...el,\n                        status: 'todo'\n                    }\n                } else if (el.status === 'resolved') {\n                    return {\n                        ...el,\n                        status: 'in progress'\n                    }\n                } else\n                    return {\n                        ...el,\n                        status: 'resolved'\n                    }\n            } else\n                return el;\n        });\n        setTasks(updatedTasks);\n    };\n\n    const increasePriority = (taskId, value) => {\n        const updatedTasks = tasks.map(el => {\n            if (el.id === taskId) {\n                return {\n                    ...el,\n                    priority: value\n                }\n            } else\n                return el;\n        });\n        setTasks(updatedTasks);\n    };\n\n    const decreasePriority = (taskId, value) => {\n        const updatedTasks = tasks.map(el => {\n            if (el.id === taskId) {\n                return {\n                    ...el,\n                    priority: value\n                }\n            } else\n                return el;\n        });\n        setTasks(updatedTasks);\n    };\n\n    return (\n        <div>\n            <div className=\"container\">\n                <h1>Kanban</h1>\n                <NewTaskForm isAddTaskFormOpen={isAddTaskFormOpen}\n                             openAddTaskForm={openAddTaskForm}\n                             cancelAddTask={cancelAddTask}\n                             addTask={addTask}/>\n                <hr/>\n                <div className=\"row\">\n                    <TaskList taskListName=\"To Do\"\n                              taskListStatus=\"todo\"\n                              tasks={tasks}\n                              increasePriority={increasePriority}\n                              decreasePriority={decreasePriority}\n                              deleteTask={deleteTask}\n                              moveTaskRight={moveTaskRight}/>\n                    <TaskList taskListName=\"In Progress\"\n                              taskListStatus=\"in progress\"\n                              tasks={tasks}\n                              increasePriority={increasePriority}\n                              decreasePriority={decreasePriority}\n                              deleteTask={deleteTask}\n                              moveTaskLeft={moveTaskLeft}\n                              moveTaskRight={moveTaskRight}/>\n                    <TaskList taskListName=\"Resolved\"\n                              taskListStatus=\"resolved\"\n                              tasks={tasks}\n                              increasePriority={increasePriority}\n                              decreasePriority={decreasePriority}\n                              deleteTask={deleteTask}\n                              moveTaskLeft={moveTaskLeft}\n                              moveTaskRight={moveTaskRight}/>\n                    <TaskList taskListName=\"Closed\"\n                              taskListStatus=\"closed\"\n                              tasks={tasks}\n                              increasePriority={increasePriority}\n                              decreasePriority={decreasePriority}\n                              deleteTask={deleteTask}\n                              moveTaskLeft={moveTaskLeft}/>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport App from './App';\n\nReactDOM.render(\n    <App/>, document.getElementById('root')\n);"],"sourceRoot":""}